
            PROTEGGERSI DALLE SQLi

  https://www.html.it/pag/16880/evitare-ogni-tipo-di-sql-injection/
- Impostare la direttiva magic_quotes_gpc del php.ini ad ON. => Dove la trovo??
- Caratteri di escape?



https://www.w3schools.com/php/php_mysql_connect.asp
PDO??



Da https://www.w3schools.com/php/php_mysql_connect.asp
PDO funziona con 12 differenti sistemi di database, mentre MySQL solo con database SQL.
So, if you have to switch your project to use another database, PDO makes the process easy. You only have to change the
connection string and a few queries. With MySQLi, you will need to rewrite the entire code - queries included.
Entrambi sono OO.
Entrambi supportano i Prapared Statements che servono a prevenire SQLi.


      COSA SIGNIFICA $SMT (by ChatGPT)
$stmt è l'abbreviazione di "statement" e rappresenta un'istanza dell'oggetto PDOStatement in PHP. Questo oggetto è restituito
da metodi della classe PDO come:
query(): Quando esegui una query diretta (senza parametri) con PDO, il metodo query() restituisce un oggetto PDOStatement.
Esso contiene i risultati della query, pronti per essere elaborati o recuperati.
prepare(): Quando usi query preparate, il metodo prepare() restituisce un oggetto PDOStatement, che puoi poi eseguire con il metodo execute().
L'oggetto PDOStatement è utilizzato per:
Recuperare i dati dal database (ad esempio, con fetch() o fetchAll()).
Iterare sui risultati della query.
Leggere e manipolare i metadati della query (come il numero di righe o colonne).
Esempio semplice:
Se esegui una query come questa:
$sql = "SELECT * FROM Eventi";
$stmt = $conn->query($sql); // Restituisce un oggetto PDOStatement
Puoi utilizzare $stmt per recuperare i risultati:
$result = $stmt->fetchAll(); // Ottieni tutti i record in formato array associativo
In sintesi, $stmt è l'oggetto che incapsula la logica per accedere e manipolare i dati risultanti dalla query eseguita.


        $stmt->bindParam('UserName', $username, PDO::PARAM_STR);   ((Spiegazione by ChatGPT))
La stringa $stmt->bindParam('UserName', $username, PDO::PARAM_STR); è utilizzata in PDO (PHP Data Objects) per associare un valore di
una variabile PHP a un segnaposto (placeholder) in una query SQL preparata.
  Metodo bindParam
bindParam() è un metodo dell'oggetto PDOStatement che collega un segnaposto in una query SQL a una variabile PHP.
Questa associazione rimane attiva fino all'esecuzione della query con il metodo execute().
A differenza di bindValue(), bindParam() assegna un riferimento alla variabile, il che significa che il valore della variabile
può cambiare prima di eseguire la query e verrà utilizzato il valore aggiornato.
  PDO::PARAM_STR
Questo è il tipo di dato del parametro passato. Qui si specifica che il valore di $username è una stringa.
È utile per garantire che i valori vengano trattati correttamente dal database, specialmente in contesti di sicurezza e coerenza dei dati.
Altri tipi di parametri includono:
PDO::PARAM_INT - Valore numerico intero.
PDO::PARAM_BOOL - Valore booleano.
PDO::PARAM_NULL - Valore nullo.
  Differenza tra bindParam e bindValue
bindParam() associa un riferimento a una variabile, quindi se il valore della variabile cambia prima dell'esecuzione, il nuovo valore verrà usato.
bindValue() associa direttamente il valore passato al parametro, quindi il valore è "bloccato" al momento della chiamata.


    $stmt->execute();